[gd_scene load_steps=7 format=2]

[ext_resource path="res://UI/under.png" type="Texture" id=1]
[ext_resource path="res://UI/over.png" type="Texture" id=2]
[ext_resource path="res://UI/mid.png" type="Texture" id=3]
[ext_resource path="res://UI/CustomizerUI.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody

signal exited_menu

var id = -1
var is_ready = false

var in_menu = false

var camspeed = 0.005
var accelspeed = 200
var rotspeed = 0.05
var deaccelspeed = 120
var vel = Vector3()
var speedLimit = 30

var torso_skeleton

var torso_yaw_bone_id = 0
var torso_yaw_bone_transform = Transform()
var torso_yawspeed = 0.15
var yaw_torso_facing = Vector3(0,0,1)

var torso_pitch_bone_id = 0
var torso_pitch_bone_transform = Transform()
var torso_pitchspeed = 0.05
var pitch_torso_facing = Vector3(0,0,1)
var pitch_limit = 90.5

var leftWeaponNode
var leftWeaponTransform = Transform()
var leftWeaponFireRate = 0.2
var leftWeaponCooldown = 0.0
onready var leftWeaponCooldownBar = $MarginContainer/HBoxContainer/VBoxContainer/TextureProgress

var rightWeaponNode
var rightWeaponTransform = Transform()
var rightWeaponFireRate = 1.0
var rightWeaponCooldown = 0.0
onready var rightWeaponCooldownBar = $MarginContainer/HBoxContainer/VBoxContainer2/TextureProgress2

var camrot = Vector3()

onready var animPlayer = $Model/AnimationTreePlayer
var floorStickRay
var floorNormal = Vector3(0,1,0)
var was_on_floor = false
var my_is_on_floor = false

var camera_y = 0.0
var camera_x = 0.0
var camera_ray_colliding = false
var camera_ray_point = Vector3(0,0,0)

func _build_mech():
	var base_node = get_node(\"Model\")
	var legs = get_node(\"Model/Scene Root\")
	if (legs != null):
		legs.name = \"oldlegs\"
		legs.call_deferred(\"free\")
	
	legs = load(global.legPart).instance()
	base_node.add_child(legs)
	var legs_skel = legs.get_node(\"leg_armature/Skeleton\")
	var t_attach = BoneAttachment.new()
	t_attach.name = \"TorsoAttach\"
	legs_skel.add_child(t_attach)
	t_attach.set_bone_name(\"WaistConnection\")
	
	var torso = load(global.bodyPart).instance()
	t_attach.add_child(torso)
	var torso_skel = torso.get_node(\"body_armature/Skeleton\")
	
	var lw_attach = BoneAttachment.new()
	lw_attach.name = \"LeftWeapon\"
	torso_skel.add_child(lw_attach)
	lw_attach.set_bone_name(\"armW.L\")
	var lspatial = Spatial.new()
	lspatial.name = \"Spatial\"
	lw_attach.add_child(lspatial)
	var l_wep_part = load(global.lWepPart)
	if (l_wep_part != null):
		lspatial.add_child(l_wep_part.instance())
	
	var rw_attach = BoneAttachment.new()
	rw_attach.name = \"RightWeapon\"
	torso_skel.add_child(rw_attach)
	rw_attach.set_bone_name(\"armW.R\")
	var rspatial = Spatial.new()
	rspatial.name = \"Spatial\"
	rw_attach.add_child(rspatial)
	var r_wep_part = load(global.rWepPart)
	if (r_wep_part != null):
		rspatial.add_child(r_wep_part.instance())
		rspatial.get_node(\"Scene Root\").scale = Vector3(-1,1,1)
	
	_ready_nodes()

func _ready_nodes():
	torso_skeleton = get_node(\"Model/Scene Root/leg_armature/Skeleton/TorsoAttach/Scene Root/body_armature/Skeleton\")
	torso_yaw_bone_id = torso_skeleton.find_bone(\"Yaw\")
	torso_yaw_bone_transform = torso_skeleton.get_bone_pose(torso_yaw_bone_id)
	torso_pitch_bone_id = torso_skeleton.find_bone(\"Pitch\")
	torso_pitch_bone_transform = torso_skeleton.get_bone_pose(torso_pitch_bone_id)
	
	leftWeaponNode = get_node(\"Model/Scene Root/leg_armature/Skeleton/TorsoAttach/Scene Root/body_armature/Skeleton/LeftWeapon/Spatial\")
	leftWeaponTransform = leftWeaponNode.global_transform
	
	rightWeaponNode = get_node(\"Model/Scene Root/leg_armature/Skeleton/TorsoAttach/Scene Root/body_armature/Skeleton/RightWeapon/Spatial\")
	rightWeaponTransform = rightWeaponNode.global_transform
	
	floorStickRay = get_node(\"Model/FloorStickRay\")
	
	var aTreePlayer = get_node(\"Model/AnimationTreePlayer\")
	aTreePlayer.set_base_path(NodePath(\"../Scene Root\"))
	aTreePlayer.set_master_player(NodePath(\"../Scene Root/AnimationPlayer\"))
	aTreePlayer.animation_node_set_master_animation(\"anim\", \"Idle\");
	aTreePlayer.animation_node_set_master_animation(\"anim 2\", \"Walk-loop\");
	aTreePlayer.animation_node_set_master_animation(\"anim 3\", \"Run-loop\");
	
	is_ready = true


func getId():
	return id

func closerDirVector(start, end, amount): #takes unit vectors only
	var axis = start.cross(end)
	if (!(axis.length_squared() > 0.0)):
		axis = Vector3(0.0,1.0,0.0)
	axis = axis.normalized()
	var endQ = Quat(axis, min(amount, abs(start.angle_to(end))))
	return endQ.xform(start)

func _menu_exit():
	is_ready = false
	_build_mech()
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	in_menu = false

func _ready():
	_build_mech()
	
	id = global.getId()
	
	set_process_input(true)
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
	connect(\"exited_menu\", self, \"_menu_exit\")

func _input(event):
	if (is_ready):
		if  (!in_menu and event.is_class(\"InputEventMouseMotion\")):
			camrot = camrot + (Vector3(-event.relative.y,-event.relative.x,0) * camspeed)
			camrot.y = fmod(camrot.y, PI*2.0)
			camrot.x = min(PI*0.5, camrot.x)
			camrot.x = max(-PI*0.5, camrot.x)
		
		if (event.is_class(\"InputEventKey\") and !event.is_echo()):
			if (event.is_action_pressed(\"menu\")):
				var cmenu = get_node(\"Customize\")
				cmenu.show()
				in_menu = true
				Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)

func _physics_process(delta):
	if (is_ready):
		var dir = Vector3() # Where does the player intend to walk to
		
		if (!in_menu):
			if (Input.is_action_pressed(\"move_forward\")):
				dir += Vector3(0,0,-1).rotated(Vector3(0,1,0), camrot.y)
			if (Input.is_action_pressed(\"move_backwards\")):
				dir += Vector3(0,0,1).rotated(Vector3(0,1,0), camrot.y)
			if (Input.is_action_pressed(\"move_left\")):
				dir += Vector3(-1,0,0).rotated(Vector3(0,1,0), camrot.y)
			if (Input.is_action_pressed(\"move_right\")):
				dir += Vector3(1,0,0).rotated(Vector3(0,1,0), camrot.y)
		
		dir = dir - (dir.dot(floorNormal) * floorNormal)
		dir = dir.normalized()
		
		var currentfacing = Vector3(0.0,0.0,-1.0).rotated(Vector3(0.0,1.0,0.0), rotation.y)
		
		if (get_node(\"CameraSpatial/ViewRay\").is_colliding()):
			get_node(\"CameraSpatial/ViewRay/Camera\").translation = get_node(\"CameraSpatial/ViewRay\").to_local(get_node(\"CameraSpatial/ViewRay\").get_collision_point())
		else:
			get_node(\"CameraSpatial/ViewRay/Camera\").translation = Vector3(0,0,0)
		
		if (!Input.is_action_pressed(\"free_look\")):
			camera_y = get_node(\"CameraSpatial\").rotation.y
			camera_x = get_node(\"CameraSpatial\").rotation.x
			camera_ray_colliding = get_node(\"CameraSpatial/ViewRay/Camera/RayCast\").is_colliding()
			if (camera_ray_colliding):
				camera_ray_point = get_node(\"CameraSpatial/ViewRay/Camera/RayCast\").get_collision_point()
		
		if (dir.length_squared() > 0.0):
			#if (!animPlayer.is_playing()): animPlayer.play(\"Walk\")
			if (currentfacing.length_squared() > 0.0):
				look_at(translation + closerDirVector(currentfacing, Vector3(dir.x, 0, dir.z), 0.1), Vector3(0.0,1.0,0.0))
		else:
			pass#animPlayer.play(\"Idle\")
		get_node(\"CameraSpatial\").rotation = camrot - Vector3(0.0, rotation.y, 0.0)
		
		yaw_torso_facing = closerDirVector(yaw_torso_facing, Vector3(0,0,1).rotated(Vector3(0,-1,0), camera_y), torso_yawspeed)
		var limited_pitch = max(camera_x, -pitch_limit)
		limited_pitch = min(limited_pitch, pitch_limit)
		pitch_torso_facing = closerDirVector(pitch_torso_facing, Vector3(0,0,1).rotated(Vector3(1,0,0), limited_pitch), torso_pitchspeed)
		
		torso_skeleton.set_bone_pose(torso_yaw_bone_id, torso_yaw_bone_transform.rotated(Vector3(0,0,1), atan2(yaw_torso_facing.x, yaw_torso_facing.z)))
		torso_skeleton.set_bone_pose(torso_pitch_bone_id, torso_pitch_bone_transform.rotated(Vector3(1,0,0), atan2(pitch_torso_facing.y, pitch_torso_facing.z)))
		
		if (camera_ray_colliding):
			leftWeaponNode.look_at(camera_ray_point, Vector3(0,1,0));
			rightWeaponNode.look_at(camera_ray_point, Vector3(0,1,0));
		
		was_on_floor = false
		if (is_on_floor() or my_is_on_floor):
			my_is_on_floor = true
			was_on_floor = true
			var speed = max(0.0, vel.length() - deaccelspeed * delta)
			vel = vel.normalized()*speed
			var new_vel = vel + (dir*accelspeed*delta)
			if (vel.length() < speedLimit):
				if (new_vel.length() > speedLimit):
					vel = vel.normalized() * speedLimit
				else:
					vel = new_vel
			
			animPlayer.blend3_node_set_amount(\"walkBlend\", min(1.0, -1.0 + (2*speed/speedLimit)))
		else :
			animPlayer.blend3_node_set_amount(\"walkBlend\", -1.0)
		
		vel += Vector3(0,-9.8*delta,0)
		
		if (!in_menu and rightWeaponCooldown <= 0.0):
			if (Input.is_action_pressed(\"fire_right\")):
				rightWeaponCooldown = rightWeaponFireRate
				var node = global.bulletScene.instance()
				node.parent_vel = vel
				node.shooter_id = id
				node.set_transform(rightWeaponNode.global_transform)
				get_tree().get_root().add_child(node)
		else:
			rightWeaponCooldown -= delta
		rightWeaponCooldownBar.value = (rightWeaponFireRate - rightWeaponCooldown) * 100 / rightWeaponFireRate
		
		if (!in_menu and leftWeaponCooldown <= 0.0):
			if (Input.is_action_pressed(\"fire_left\")):
				leftWeaponCooldown = leftWeaponFireRate
				var node = global.bulletScene.instance()
				node.parent_vel = vel
				node.shooter_id = id
				node.set_transform(leftWeaponNode.global_transform)
				get_tree().get_root().add_child(node)
		else:
			leftWeaponCooldown -= delta
		leftWeaponCooldownBar.value = (leftWeaponFireRate - leftWeaponCooldown) * 100 / leftWeaponFireRate 
		
		vel = move_and_slide(vel,Vector3(0,1,0))
		my_is_on_floor = false
		
		if (get_slide_count() > 0):
			floorNormal = Vector3(0,0,0)
			var i = 0
			while (i < get_slide_count()):
				floorNormal += get_slide_collision(i).normal
				i += 1
			floorNormal = floorNormal.normalized()
		else:
			floorNormal = Vector3(0,1,0)
		
		if (!is_on_floor() and was_on_floor):
			floorStickRay.force_raycast_update()
			if (floorStickRay.is_colliding()):
				if (floorStickRay.get_collision_normal().angle_to(Vector3(0,1,0)) <= 0.785398):
					move_and_collide(Vector3(0,-20,0))
					floorNormal = floorStickRay.get_collision_normal()
					my_is_on_floor = true
	"

[sub_resource type="CapsuleShape" id=2]

radius = 1.90303
height = 2.81633

[node name="KinematicBody" type="KinematicBody" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.0113586 )
input_ray_pickable = true
input_capture_on_drag = false
collision_layer = 2
collision_mask = 1
axis_lock_linear_x = false
axis_lock_linear_y = false
axis_lock_linear_z = false
axis_lock_angular_x = false
axis_lock_angular_y = false
axis_lock_angular_z = false
collision/safe_margin = 0.001
script = SubResource( 1 )
_sections_unfolded = [ "Axis Lock", "Collision", "Transform", "collision" ]

[node name="CollisionShape" type="CollisionShape" parent="." index="0"]

transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 3.17993, 0 )
shape = SubResource( 2 )
disabled = false
_sections_unfolded = [ "Transform" ]

[node name="CameraSpatial" type="Spatial" parent="." index="1"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5.58293, 0 )
_sections_unfolded = [ "Transform" ]

[node name="ViewRay" type="RayCast" parent="CameraSpatial" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.5, 0.7, 9.5 )
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -8 )
collision_mask = 1
_sections_unfolded = [ "Transform" ]

[node name="Camera" type="Camera" parent="CameraSpatial/ViewRay" index="0"]

keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = false
fov = 85.0
size = 1.0
near = 1.0
far = 2000.0
_sections_unfolded = [ "Transform" ]

[node name="RayCast" type="RayCast" parent="CameraSpatial/ViewRay/Camera" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -8.00923 )
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -100 )
collision_mask = 1

[node name="Model" type="Spatial" parent="." index="2"]

_sections_unfolded = [ "Transform" ]

[node name="FloorStickRay" type="RayCast" parent="Model" index="0"]

enabled = true
exclude_parent = true
cast_to = Vector3( 0, -1, 0 )
collision_mask = 1

[node name="AnimationTreePlayer" type="AnimationTreePlayer" parent="Model" index="1"]

playback_process_mode = 0
master_player = NodePath("")
base_path = NodePath("")
active = true
data = {
"active": true,
"connections": [ "anim", "walkBlend", 0, "anim 2", "walkBlend", 1, "anim 3", "walkBlend", 2, "walkBlend", "out", 0 ],
"master": NodePath(""),
"nodes": [ {
"animation": null,
"filter": [  ],
"id": "anim 2",
"position": Vector2( 78, 185 ),
"type": "animation"
}, {
"animation": null,
"filter": [  ],
"id": "anim 3",
"position": Vector2( 78, 299 ),
"type": "animation"
}, {
"blend": -1.0,
"id": "walkBlend",
"position": Vector2( 345, 96 ),
"type": "blend3"
}, {
"id": "out",
"position": Vector2( 624, 100 ),
"type": "output"
}, {
"animation": null,
"filter": [  ],
"id": "anim",
"position": Vector2( 80, 67 ),
"type": "animation"
} ]
}
_sections_unfolded = [ "Playback" ]

[node name="MarginContainer" type="MarginContainer" parent="." index="3"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 521.0
margin_right = 1024.0
margin_bottom = 601.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 0
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
custom_constants/margin_right = 20
custom_constants/margin_top = 20
custom_constants/margin_left = 20
custom_constants/margin_bottom = 20
_sections_unfolded = [ "Theme", "custom_constants" ]

[node name="HBoxContainer" type="HBoxContainer" parent="MarginContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 20.0
margin_top = 20.0
margin_right = 1004.0
margin_bottom = 60.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0
_sections_unfolded = [ "Size Flags" ]

[node name="VBoxContainer" type="VBoxContainer" parent="MarginContainer/HBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 780.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 3
size_flags_vertical = 1
alignment = 0
_sections_unfolded = [ "Size Flags" ]

[node name="TextureProgress" type="TextureProgress" parent="MarginContainer/HBoxContainer/VBoxContainer" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 780.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 100.0
step = 0.0
page = 0.0
value = 0.0
exp_edit = false
rounded = false
texture_under = ExtResource( 1 )
texture_over = ExtResource( 2 )
texture_progress = ExtResource( 3 )
fill_mode = 1
radial_fill_degrees = 360.0
radial_center_offset = Vector2( 0, 0 )
nine_patch_stretch = false
_sections_unfolded = [ "Textures" ]

[node name="VBoxContainer2" type="VBoxContainer" parent="MarginContainer/HBoxContainer" index="1"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 784.0
margin_right = 984.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
alignment = 0

[node name="TextureProgress2" type="TextureProgress" parent="MarginContainer/HBoxContainer/VBoxContainer2" index="0"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 200.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
mouse_filter = 1
mouse_default_cursor_shape = 0
size_flags_horizontal = 1
size_flags_vertical = 1
min_value = 0.0
max_value = 100.0
step = 0.0
page = 0.0
value = 0.0
exp_edit = false
rounded = false
texture_under = ExtResource( 1 )
texture_over = ExtResource( 2 )
texture_progress = ExtResource( 3 )
radial_fill_degrees = 360.0
radial_center_offset = Vector2( 0, 0 )
nine_patch_stretch = false
_sections_unfolded = [ "Textures" ]

[node name="Customize" parent="." index="4" instance=ExtResource( 4 )]

visible = false


