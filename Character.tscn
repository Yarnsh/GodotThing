[gd_scene load_steps=6 format=2]

[ext_resource path="res://Stuff/Mech01.dae" type="PackedScene" id=1]
[ext_resource path="res://Stuff/Material.material" type="Material" id=2]
[ext_resource path="res://Stuff/Material_001.material" type="Material" id=3]

[sub_resource type="GDScript" id=1]

script/source = "extends KinematicBody

var camspeed = 0.005
var accelspeed = 15
var rotspeed = 0.05
var deaccelspeed = 10
var vel = Vector3()

var skeleton
var bone_id = 0;
var bone_transform = Transform()
var torso_facing = Vector3(0,0,1)
var torso_yawspeed = 0.05

var camrot = Vector3()
# class member variables go here, for example:
# var a = 2
# var b = \"textvar\"

func closerDirVector(start, end, amount): #takes unit vectors only
	var axis = start.cross(end)
	if (!(axis.length_squared() > 0.0)):
		axis = Vector3(0.0,1.0,0.0)
	axis = axis.normalized()
	var endQ = Quat(axis, min(amount, abs(start.angle_to(end))))
	return endQ.xform(start)

func _ready():
	set_process_input(true)
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
	skeleton = get_node(\"Model/Armature/Armature.001/Skeleton\")
	bone_id = skeleton.find_bone(\"Yaw\")
	bone_transform = skeleton.get_bone_pose(bone_id)

func _input(event):
	if  (event.is_class(\"InputEventMouseMotion\")):
		camrot = camrot + (Vector3(-event.relative.y,-event.relative.x,0) * camspeed)
		camrot.y = fmod(camrot.y, 3.14159*2.0)
		camrot.x = min(3.14159*0.5, camrot.x)
		camrot.x = max(-3.14159*0.5, camrot.x)

func _physics_process(delta):
	var dir = Vector3() # Where does the player intend to walk to
	
	if (Input.is_action_pressed(\"move_forward\")):
		dir += Vector3(0,0,-1).rotated(Vector3(0,1,0), camrot.y)
	if (Input.is_action_pressed(\"move_backwards\")):
		dir += Vector3(0,0,1).rotated(Vector3(0,1,0), camrot.y)
	if (Input.is_action_pressed(\"move_left\")):
		dir += Vector3(-1,0,0).rotated(Vector3(0,1,0), camrot.y)
	if (Input.is_action_pressed(\"move_right\")):
		dir += Vector3(1,0,0).rotated(Vector3(0,1,0), camrot.y)
	
	dir = dir.normalized()
	
	var currentfacing = Vector3(0.0,0.0,-1.0).rotated(Vector3(0.0,1.0,0.0), rotation.y)
	
	if (dir.length_squared() > 0.0):
		if (currentfacing.length_squared() > 0.0):
			look_at(translation + closerDirVector(currentfacing, dir, 0.1), Vector3(0.0,1.0,0.0))
	get_node(\"CameraSpatial\").rotation = camrot - Vector3(0.0, rotation.y, 0.0)
	
	torso_facing = closerDirVector(torso_facing, Vector3(0,0,1).rotated(Vector3(0,-1,0), get_node(\"CameraSpatial\").rotation.y), torso_yawspeed)
	
	skeleton.set_bone_pose(bone_id, bone_transform.rotated(Vector3(0,0,1), atan2(torso_facing.x, torso_facing.z)))
	
	if (is_on_floor()):
		vel += dir*accelspeed*delta
		
		var speed = max(0.0, Vector3(vel.x,0,vel.z).length() - deaccelspeed * delta)
		var hvel = Vector3(vel.x, 0, vel.z).normalized() * speed
		vel = Vector3(hvel.x, vel.y, hvel.z)
	
	if (Input.is_action_pressed(\"jump\")):
		vel += Vector3(0,3.0*delta,0)
	else:
		vel += Vector3(0,-3.0*delta,0)
	
	vel = move_and_slide(vel,Vector3(0,1,0))"

[sub_resource type="CapsuleShape" id=4]

radius = 1.90303
height = 2.81633

[node name="KinematicBody" type="KinematicBody" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -0.0113586 )
input_ray_pickable = true
input_capture_on_drag = false
collision_layer = 1
collision_mask = 1
axis_lock_linear_x = false
axis_lock_linear_y = false
axis_lock_linear_z = false
axis_lock_angular_x = false
axis_lock_angular_y = false
axis_lock_angular_z = false
collision/safe_margin = 0.001
script = SubResource( 1 )
_sections_unfolded = [ "Axis Lock", "Collision", "collision" ]

[node name="Model" parent="." index="0" instance=ExtResource( 1 )]

transform = Transform( -1, 0, -8.74228e-08, 0, 1, 0, 8.74228e-08, 0, -1, 0, 0, 0 )
_sections_unfolded = [ "Transform" ]

[node name="Plane" parent="Model/Armature/Skeleton" index="0"]

material/0 = ExtResource( 2 )
_sections_unfolded = [ "material" ]

[node name="Plane.001" parent="Model/Armature/Armature.001/Skeleton" index="0"]

material/0 = ExtResource( 3 )
_sections_unfolded = [ "material" ]

[node name="CollisionShape" type="CollisionShape" parent="." index="1"]

transform = Transform( 1, 0, 0, 0, -4.37114e-08, -1, 0, 1, -4.37114e-08, 0, 3.17993, 0 )
shape = SubResource( 4 )
disabled = false
_sections_unfolded = [ "Transform" ]

[node name="CameraSpatial" type="Spatial" parent="." index="2"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 5.58293, 0 )
_sections_unfolded = [ "Transform" ]

[node name="Camera" type="Camera" parent="CameraSpatial" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 3.05001, 0.525797, 9.44659 )
keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = false
fov = 70.0
size = 1.0
near = 0.05
far = 100.0
_sections_unfolded = [ "Transform" ]


[editable path="Model"]
