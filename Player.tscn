[gd_scene load_steps=5 format=2]

[ext_resource path="res://Things/Mechs/Mech.tscn" type="PackedScene" id=1]
[ext_resource path="res://UI/CustomizerUI.tscn" type="PackedScene" id=2]
[ext_resource path="res://UI/InGameUI.tscn" type="PackedScene" id=3]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

signal exited_menu

onready var Mech = $KinematicBody
onready var Cam = $KinematicBody/CameraSpatial
onready var CCam = $KinematicBody/CameraSpatial/ViewRay/Camera

onready var leftAmmoHUD = $HUD/HBoxContainer/VBoxContainer/TextureProgress
onready var rightAmmoHUD = $HUD/HBoxContainer/VBoxContainer2/TextureProgress2

var in_menu = false
var camrot = Vector3()
var camspeed = 0.005

func _ready():
	set_process_input(true)
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	
	connect(\"exited_menu\", self, \"_menu_exit\")
	
	if (is_in_group(\"friendly\")):
		add_to_group(\"friendly_ready\")
	if (is_in_group(\"enemy\")):
		add_to_group(\"enemy_ready\")

func _menu_exit():
	#is_ready = false
	Mech.buildMech(global.legPart, global.bodyPart, global.lWepPart, global.rWepPart, global.color1, global.pattern1, global.color2, global.pattern2)
	Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	in_menu = false

func _input(event):
	if  (!in_menu and event.is_class(\"InputEventMouseMotion\")):
		camrot = camrot + (Vector3(-event.relative.y,-event.relative.x,0) * camspeed)
		camrot.y = fmod(camrot.y, PI*2.0)
		camrot.x = min(PI*0.5, camrot.x)
		camrot.x = max(-PI*0.5, camrot.x)
		
	if (event.is_class(\"InputEventKey\") and !event.is_echo()):
		if (event.is_action_pressed(\"menu\")):
			var cmenu = get_node(\"Customize\")
			cmenu.show()
			in_menu = true
			Input.set_mouse_mode(Input.MOUSE_MODE_VISIBLE)
		else: if (event.is_action_pressed(\"left_weapon_switch\")):
			Mech.nextRightWeapon()
			get_node(\"HUD/HBoxContainer/VBoxContainer/Label\").text = String(Mech.getLeftWeapon())
		else: if (event.is_action_pressed(\"right_weapon_switch\")):
			Mech.nextRightWeapon()
			get_node(\"HUD/HBoxContainer/VBoxContainer2/Label\").text = String(Mech.getRightWeapon())

func _process(delta):
	var dir = Vector3();
	
	Cam.rotation = camrot - Mech.rotation
	
	if (!in_menu):
		if (Input.is_action_pressed(\"move_forward\")):
			dir += Vector3(0,0,-1).rotated(Vector3(0,1,0), camrot.y)
		if (Input.is_action_pressed(\"move_backwards\")):
			dir += Vector3(0,0,1).rotated(Vector3(0,1,0), camrot.y)
		if (Input.is_action_pressed(\"move_left\")):
			dir += Vector3(-1,0,0).rotated(Vector3(0,1,0), camrot.y)
		if (Input.is_action_pressed(\"move_right\")):
			dir += Vector3(1,0,0).rotated(Vector3(0,1,0), camrot.y)
		
		if (Input.is_action_pressed(\"fire_left\")):
			Mech.fireLeft()
		if (Input.is_action_pressed(\"fire_right\")):
			Mech.fireRight()
		
		if (get_node(\"KinematicBody/CameraSpatial/ViewRay\").is_colliding()):
			get_node(\"KinematicBody/CameraSpatial/ViewRay/Camera\").translation = get_node(\"KinematicBody/CameraSpatial/ViewRay\").to_local(get_node(\"KinematicBody/CameraSpatial/ViewRay\").get_collision_point())
		else:
			get_node(\"KinematicBody/CameraSpatial/ViewRay/Camera\").translation = Vector3(0,0,0)
		
		if (!Input.is_action_pressed(\"free_look\")):
			Mech.camera_y = Cam.rotation.y
			Mech.camera_x = Cam.rotation.x
	
	Mech.dir = dir
	
	Mech.aim(\"enemy_ready\")
	
	leftAmmoHUD.value = Mech.getLeftWeaponCooling()
	rightAmmoHUD.value = Mech.getRightWeaponCooling()

func getAimPos():
	return Mech.global_transform.origin + Vector3(0.0,5.0,0.0)
func getPos():
	return Mech.global_transform.origin
func getVel():
	return Mech.vel"

[node name="Player" type="Node"]

script = SubResource( 1 )

[node name="KinematicBody" parent="." index="0" instance=ExtResource( 1 )]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 10, 0 )
onPlayer = true

[node name="CameraSpatial" type="Spatial" parent="KinematicBody" index="2"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4.41707, 0 )
_sections_unfolded = [ "Transform" ]

[node name="ViewRay" type="RayCast" parent="KinematicBody/CameraSpatial" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5.47916, 1.24634, 10.2551 )
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -8 )
collision_mask = 1
_sections_unfolded = [ "Transform" ]

[node name="Camera" type="Camera" parent="KinematicBody/CameraSpatial/ViewRay" index="0"]

keep_aspect = 1
cull_mask = 1048575
environment = null
h_offset = 0.0
v_offset = 0.0
doppler_tracking = 0
projection = 0
current = false
fov = 85.0
size = 1.0
near = 1.0
far = 2000.0
_sections_unfolded = [ "Transform" ]

[node name="RayCast" type="RayCast" parent="KinematicBody/CameraSpatial/ViewRay/Camera" index="0"]

transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, -8.00923 )
enabled = true
exclude_parent = true
cast_to = Vector3( 0, 0, -100 )
collision_mask = 1

[node name="Customize" parent="." index="1" instance=ExtResource( 2 )]

visible = false

[node name="HUD" parent="." index="2" instance=ExtResource( 3 )]

margin_top = 502.0
margin_bottom = 600.0


